name: Push Build
on: [push]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GITHUB_SHA: ${{ github.sha }}
  BUILD_ID: ${{ github.run_id }}
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build the image
        run: docker build -t release ./
      - name: Tagging the Release
        run: docker tag release docker.pkg.github.com/jrtapsell/metabaseautocovid/automatic:$GITHUB_SHA
      - name: Login to GitHub Packages
        run: docker login docker.pkg.github.com -u jrtapsell -p "$GITHUB_TOKEN"
      - name: Push the image
        run: docker push docker.pkg.github.com/jrtapsell/metabaseautocovid/automatic:$GITHUB_SHA

  test:
    name: Test Build
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Login to GitHub Packages
        run: docker login docker.pkg.github.com -u jrtapsell -p "$GITHUB_TOKEN"
      - name: Pull the image
        run: docker pull docker.pkg.github.com/jrtapsell/metabaseautocovid/automatic:$GITHUB_SHA
      - name: Tagging the Release
        run: docker tag docker.pkg.github.com/jrtapsell/metabaseautocovid/automatic:$GITHUB_SHA release
      - name: Run validate on the image
        timeout-minutes: 5
        run: docker run --rm --tmpfs /tmp --read-only release ./python/validate.py

  release-branch:
    name: Create branch release
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Login to GitHub Packages
        run: docker login docker.pkg.github.com -u jrtapsell -p "$GITHUB_TOKEN"
      - name: Pull the image
        run: docker pull docker.pkg.github.com/jrtapsell/metabaseautocovid/automatic:$GITHUB_SHA
      - name: Tagging the Release
        run: docker tag docker.pkg.github.com/jrtapsell/metabaseautocovid/automatic:$GITHUB_SHA release
      - name: Tag passing images
        run: docker tag release docker.pkg.github.com/jrtapsell/metabaseautocovid/$(echo ${GITHUB_REF#refs/} | sed 's/heads/branch/' | sed 's/\//:/' | sed 's/\//_/g')
      - name: Push branch releases
        run: docker push docker.pkg.github.com/jrtapsell/metabaseautocovid/$(echo ${GITHUB_REF#refs/} | sed 's/heads/branch/' | sed 's/\//:/' | sed 's/\//_/g')

  release-master:
    if: github.ref == 'refs/heads/master'
    name: Create full release
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Login to GitHub Packages
        run: docker login docker.pkg.github.com -u jrtapsell -p "$GITHUB_TOKEN"
      - name: Pull the image
        run: docker pull docker.pkg.github.com/jrtapsell/metabaseautocovid/automatic:$GITHUB_SHA
      - name: Tagging the Release
        run: docker tag docker.pkg.github.com/jrtapsell/metabaseautocovid/automatic:$GITHUB_SHA release
      - name: Tag release number
        run: docker tag release docker.pkg.github.com/jrtapsell/metabaseautocovid/metabaseautocovid:$BUILD_ID
      - name: Release release number
        run: docker push docker.pkg.github.com/jrtapsell/metabaseautocovid/metabaseautocovid:$BUILD_ID
      - name: Tag release latest
        run: docker tag release docker.pkg.github.com/jrtapsell/metabaseautocovid/metabaseautocovid:latest
      - name: Release release latest
        run: docker push docker.pkg.github.com/jrtapsell/metabaseautocovid/metabaseautocovid:latest
      - name: Creating release tag
        run: git config --global user.email "actions@github.com" && git config --global user.name "GitHub Actions" && git tag -a "v$BUILD_ID" -m "Release $BUILD_ID"
      - name: Pushing release tag
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tags: true
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        with:
          tag_name: "v${{ github.run_id }}"
          release_name: "Release ${{ github.run_id }}"
          body: To Fill Out
          draft: true
          prerelease: false